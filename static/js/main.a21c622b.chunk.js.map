{"version":3,"sources":["components/form.jsx","actions/action.js","components/card.jsx","components/ToggleTheme.jsx","App.js","reducers/placeReducer.js","reducers/placeDataReducer.js","reducers/themeReducer.js","reducers/index.js","store.js","index.js"],"names":["Form","dispatch","useDispatch","place","useSelector","state","theme","className","type","value","onChange","e","payload","updatePlace","target","onClick","fetch","then","res","json","data","updatePlaceData","Card","placeholder","console","log","style","borderRadius","location","src","current","condition","icon","alt","opacity","temp_c","text","name","wind_kph","humidity","precip_in","ToggleTheme","App","placeReducer","action","placeDataReducer","themeReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAyBeA,EAtBF,WACT,IAAMC,EAAUC,cACVC,EAAOC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SAClCG,EAAQF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SACzC,OACI,qBAAKC,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,eAAf,UACI,uBAAOC,KAAK,OAAQC,MAAON,EAAOO,SAAU,SAACC,GACzCV,ECZJ,SAACE,GACjB,MAAO,CACHK,KAAK,eACLI,QAAQT,GDSiBU,CAAYF,EAAEG,OAAOL,WAElC,wBAAQF,UAAWD,EAAQ,gBAAkB,eAAgBS,QACzD,WACId,ECVJ,SAACE,GACrB,OAAO,SAACF,GACJe,MAAM,oFAAD,OAAqFb,IACzFc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFnB,EAAS,CACLO,KAAK,oBACLI,QAAQQ,QDGaC,CAAgBlB,KAFjC,4BE4BLmB,EAzCF,WACT,IAAMC,EAAcnB,aAAY,SAACC,GAAD,OAAWA,EAAMkB,eAC3CjB,EAAQF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAEzC,OADAkB,QAAQC,IAAIF,GAER,qBAAKhB,UAAU,YAAf,SACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,4BAAf,SACI,qBAAKA,UAAWD,EAAM,YAAY,OAAQoB,MAAO,CAAEC,aAAc,QAAjE,SACKJ,EAAYK,SAAW,gCAEpB,qBAAKC,IAAKN,EAAYO,QAAQC,UAAUC,KAAMC,IAAI,OAAOP,MAAO,CAAEQ,QAAS,UAC3E,sBAAK3B,UAAU,OAAf,UAAuBgB,EAAYO,QAAQK,OAA3C,UACA,qBAAK5B,UAAU,OAAf,SAAuBgB,EAAYO,QAAQC,UAAUK,OACrD,qBAAK7B,UAAU,QAAf,SAAwBgB,EAAYK,SAASS,OAC7C,qBAAK9B,UAAU,YAAf,SACI,sBAAKA,UAAU,UAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,sBACA,sBAAKA,UAAU,OAAf,UAAuBgB,EAAYO,QAAQQ,SAAS,sBAAM/B,UAAU,OAAhB,sBAExD,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,sBACA,sBAAKA,UAAU,OAAf,UAAuBgB,EAAYO,QAAQS,SAAS,sBAAMhC,UAAU,OAAhB,qBAExD,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,QAAf,2BACA,sBAAKA,UAAU,OAAf,UAAuBgB,EAAYO,QAAQU,UAAU,sBAAMjC,UAAU,OAAhB,6BAM5D,qDChBlBkC,G,MAdK,WAChB,IAAMnC,EAAQF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SACnCL,EAAUC,cAChB,OACI,qBAAKK,UAAU,eAAf,SACI,wBAAQA,UAAWD,EAAQ,gBAAkB,eAC7CS,QACI,WACGd,EFOR,CACHO,KAAK,kBEXD,SAKGF,EAAQ,OAAS,cCMjBoC,MAZf,WACE,IAAMpC,EAAQF,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAE3C,OADAkB,QAAQC,IAAInB,GAEV,sBAAKC,UAAWD,EAAQ,WAAa,MAArC,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,Q,OCRSqC,EAPM,WAAsB,IAArBtC,EAAoB,uDAAd,GAAGuC,EAAW,uCACtC,MAAmB,iBAAhBA,EAAOpC,KACCoC,EAAOhC,QAEXP,GCEIwC,EANU,WAA0B,IAAzBxC,EAAwB,uDAAhB,GAAKuC,EAAW,uCAC9C,MAAmB,sBAAhBA,EAAOpC,KACCoC,EAAOhC,QAEXP,GCEIyC,EANM,WAA0B,IAAzBzC,EAAwB,wDAAXuC,EAAW,uCAC1C,MAAmB,iBAAhBA,EAAOpC,MACEH,EAELA,GCMI0C,EALKC,YAAgB,CAChC7C,MAAMwC,EACNpB,YAAYsB,EACZvC,MAAMwC,I,OCHKG,EADDC,YAAYH,EAAYI,YAAgBC,MCGtDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,EAAD,QAGFO,SAASC,eAAe,W","file":"static/js/main.a21c622b.chunk.js","sourcesContent":["\r\nimport { useDispatch,useSelector } from \"react-redux\";\r\nimport { updatePlace,updatePlaceData } from \"../actions/action\";\r\nconst Form = () => {\r\n    const dispatch= useDispatch();\r\n    const place =useSelector(state => state.place);\r\n    const theme = useSelector(state => state.theme);\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12  form\">\r\n                    <input type=\"text\"  value={place} onChange={(e)=>{\r\n                        dispatch(updatePlace(e.target.value));\r\n                    }}/>\r\n                    <button className={theme ? \"btn btn-light\" : \"btn btn-dark\"} onClick={\r\n                        () =>{\r\n                            dispatch(updatePlaceData(place));\r\n                        }\r\n                    }>submit</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Form;","const updatePlace = (place) => {\r\n    return {\r\n        type:\"UPDATE_PLACE\",\r\n        payload:place,\r\n    }\r\n}\r\nconst updatePlaceData = (place) => {\r\n    return (dispatch) => {\r\n        fetch(`https://api.weatherapi.com/v1/current.json?key=f9ab8b4b461b4921a3e135517211308&q=${place}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            dispatch({\r\n                type:\"UPDATE_PLACE_DATA\",\r\n                payload:data,\r\n            })\r\n        })\r\n    }\r\n}\r\nconst toggleTheme = () => {\r\n    return {\r\n        type:\"TOGGLE_THEME\"\r\n    }\r\n}\r\nexport { updatePlace,updatePlaceData,toggleTheme };","import { useSelector } from \"react-redux\";\r\nconst Card = () => {\r\n    const placeholder = useSelector((state) => state.placeholder);\r\n    const theme = useSelector(state => state.theme);\r\n    console.log(placeholder)\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"offset-md-4 col-4 weather\">\r\n                    <div className={theme?\"card dark\":\"card\"} style={{ borderRadius: \"50px\" }}>\r\n                        {placeholder.location ? <div>\r\n\r\n                            <img src={placeholder.current.condition.icon} alt=\"icon\" style={{ opacity: \"100%\" }}></img>\r\n                            <div className=\"temp\">{placeholder.current.temp_c}Â°</div>\r\n                            <div className=\"desc\">{placeholder.current.condition.text}</div>\r\n                            <div className=\"place\">{placeholder.location.name}</div>\r\n                            <div className=\"container\">\r\n                                <div className=\"row whp\">\r\n                                    <div className=\"col\">\r\n                                        <div className=\"title\">Wind Now</div>\r\n                                        <div className=\"data\">{placeholder.current.wind_kph}<span className=\"unit\">km</span></div>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"title\">Humidity</div>\r\n                                        <div className=\"data\">{placeholder.current.humidity}<span className=\"unit\">%</span></div>\r\n                                    </div>\r\n                                    <div className=\"col\">\r\n                                        <div className=\"title\">Precipitation</div>\r\n                                        <div className=\"data\">{placeholder.current.precip_in}<span className=\"unit\">%</span></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </div> : <h1>not found!</h1>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { toggleTheme } from \"../actions/action\";\r\n\r\nconst ToggleTheme = () => {\r\n    const theme = useSelector(state => state.theme);\r\n    const dispatch =useDispatch();\r\n    return (\r\n        <div className=\"toggle-theme\">\r\n            <button className={theme ? \"btn btn-light\" : \"btn btn-dark\"}\r\n            onClick={\r\n                () => {\r\n                   dispatch(toggleTheme()) ;\r\n                }\r\n            }>{theme ? \"Dark\" : \"light\"}</button>\r\n        </div>\r\n    )\r\n}\r\nexport default ToggleTheme;","\nimport './App.css';\nimport Form from \"./components/form\";\nimport Card from './components/card';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useSelector } from \"react-redux\";\nimport ToggleTheme from './components/ToggleTheme';\n\nfunction App() {\n  const theme = useSelector((state) => state.theme);\n  console.log(theme);\n  return (\n    <div className={theme ? \"App dark\" : \"App\"}>\n      <Form />\n      <Card />\n      <ToggleTheme/>\n    </div>\n  );\n}\n\nexport default App;\n","const placeReducer = (state=\"\",action) => {\r\n    if(action.type === \"UPDATE_PLACE\"){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n\r\n}\r\nexport default placeReducer;","const placeDataReducer = (state = {} , action) => {\r\n    if(action.type === \"UPDATE_PLACE_DATA\"){\r\n        return action.payload;\r\n    }\r\n    return state;\r\n}\r\nexport default placeDataReducer;","const themeReducer = (state=false ,action) => {\r\n    if(action.type === \"TOGGLE_THEME\"){\r\n        return !state;\r\n    }\r\n    return state;\r\n};\r\nexport default themeReducer;","import { combineReducers } from \"redux\";\r\nimport placeReducer from \"./placeReducer\";\r\nimport placeDataReducer from \"./placeDataReducer\";\r\nimport themeReducer from \"./themeReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    place:placeReducer,\r\n    placeholder:placeDataReducer,\r\n    theme:themeReducer,\r\n})\r\nexport default rootReducer;","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport thunk from \"redux-thunk\";\r\nimport { applyMiddleware } from \"redux\";\r\nconst store = createStore(rootReducer,applyMiddleware(thunk));\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport store from \"./store\"\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}